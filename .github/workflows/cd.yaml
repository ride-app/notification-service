name: CD

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build+Push
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: go.buf.build
      BUF_USER: debkanchan
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version-file: go.mod

      - uses: bufbuild/buf-setup-action@v1.8.0
        with:
          github_token: ${{ github.token }}

      - name: Authenticate buf
        run: echo ${{ secrets.BUF_TOKEN }} | buf registry login --username ${{ env.BUF_USER }} --token-stdin

      - name: Build protobuf
        run: buf generate

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            asia-south2-docker.pkg.dev/ride-app-prod/delhi-container-registry/notification-service
          tags: |
            type=semver,pattern={{version}}
            type=sha
            type=sha,format=long
          flavor: |
            latest=true
          github-token: ${{ github.token }}

      - name: Authenticate To Google Cloud
        id: gcp-auth
        uses: google-github-actions/auth@v0
        with:
          token_format: access_token
          workload_identity_provider: projects/486946551871/locations/global/workloadIdentityPools/github-actions/providers/github-actions-provider
          service_account: artifact-registry-admin@ride-app-prod.iam.gserviceaccount.com

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: asia-south2-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.gcp-auth.outputs.access_token }}

      - name: Build and Upload
        id: docker
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUF_USERNAME=${{ env.BUF_USER }}
          secrets: |
            BUF_TOKEN=${{ secrets.BUF_TOKEN }}

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      SERVICE_NAME: notification-service
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - run: npm install
        working-directory: infra

      - name: Cache node_modules
        uses: actions/cache@v3.0.10
        with:
          path: |
            **/node_modules
          key: |
            node-${{ hashfiles('**/package-lock.json') }}
          restore-keys: |
            node-

      - name: Authenticate Google Cloud
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: projects/486946551871/locations/global/workloadIdentityPools/github-actions/providers/github-actions-provider
          service_account: cloud-run-service-manager@ride-app-prod.iam.gserviceaccount.com

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0

      - name: Set current sha in pulumi config
        run: |
          pulumi config set image:tag sha-${{ github.sha }} -s ride/prod
        working-directory: infra

      - uses: pulumi/actions@v3
        with:
          work-dir: infra
          command: up
          stack-name: ride/prod
          refresh: true
