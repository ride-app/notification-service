syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

package ride.notification.v1alpha1;

service NotificationService {

  rpc GetNotificationToken (GetNotificationTokenRequest) returns (GetNotificationTokenResponse) {
    option (google.api.http) = {
    get: "/v1alpha1/{name=users/*/token}"
    };
  };

  rpc UpdateNotificationToken (UpdateNotificationTokenRequest) returns (UpdateNotificationTokenResponse) {
    option (google.api.http) = {
    patch: "/v1alpha1/{name=users/*/token}"
      body: "*"
    };
  };

  rpc SendNotification(SendNotificationRequest) returns (SendNotificationResponse) {
    option (google.api.http) = {
      post: "/v1alpha1/notification:send"
      body: "*"
    };
  }
}

message GetNotificationTokenRequest {
  // Relative resource name of the notification token. Example: users/123/token
  string name = 1 [(validate.rules).string.pattern = "^users/[A-Za-z0-9_-]+/token$"];
}

message GetNotificationTokenResponse {
  // Notification token of the user.
  string token = 1;
}

message UpdateNotificationTokenRequest {
  // Relative resource name of the notification token. Example: users/123/token
  string name = 1 [(validate.rules).string.pattern = "^users/[A-Za-z0-9_-]+/token$"];

  // Notification token of the user.
  string token = 2;
}

message UpdateNotificationTokenResponse {}

message SendNotificationRequest {
  // Target of the notification. Can be user, token, topic or condition.
  Target target = 1;

  // Notification to be sent. **Must** be a valid FCM notification.
  google.protobuf.Struct payload = 2;

  message Target {
    oneof target {
      // Relative resource name of the user to which the notification is sent. Example: users/123
      string user = 1 [(validate.rules).string.pattern = "^users/[A-Za-z0-9_-]+$"];

      // Notification token of the user to which the notification is sent.
      string token = 2;

      // Topic to which the notification is sent.
      string topic = 3;

      // Condition to which the notification is sent.
      string condition = 4;
    }
  }
}

message SendNotificationResponse {}
