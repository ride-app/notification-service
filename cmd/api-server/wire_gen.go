// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/dragonfish/go/v2/pkg/logger"
	"github.com/ride-app/notification-service/config"
	"github.com/ride-app/notification-service/internal/api-handlers"
	"github.com/ride-app/notification-service/internal/repositories/token"
	"github.com/ride-app/notification-service/third-party"
)

// Injectors from wire.go:

func InitializeService(logger2 logger.Logger, config2 *config.Config) (*apihandlers.NotificationServiceServer, error) {
	app, err := thirdparty.NewFirebaseApp(logger2, config2)
	if err != nil {
		return nil, err
	}
	rtdbImpl, err := tokenrepository.NewRTDBTokenRepository(app, logger2)
	if err != nil {
		return nil, err
	}
	notificationServiceServer := apihandlers.New(rtdbImpl, logger2)
	return notificationServiceServer, nil
}
